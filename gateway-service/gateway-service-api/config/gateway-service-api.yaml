openapi: 3.0.0
info:
  title: Project Planning Gateway Service API
  description: API for Gateway
  version: 1.0.0

paths:
  /cost-project/:
    get:
      summary: Find all Cost Projects
      operationId: findAllCostProjects
      tags:
        - cost-project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostProjectShortDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/create:
    post:
      summary: Create Cost Project
      operationId: createCostProject
      tags:
        - cost-project
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectShortDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/createEmpty:
    post:
      summary: Create empty Cost Project
      operationId: createEmptyCostProject
      tags:
        - cost-project
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '201':
          description: Created
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/delete:
    post:
      summary: Delete Cost Projects
      operationId: deleteCostProjects
      tags:
        - cost-project
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: array
              items:
                type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostProjectShortDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}:
    get:
      summary: Find Cost Project by Id
      operationId: findCostProjectById
      tags:
        - cost-project
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/defineName:
    post:
      summary: Project cost name update
      operationId: defineCostProjectName
      tags:
        - cost-project
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineNameDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectShortDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/defineMoneyPerHour:
    post:
      summary: Project cost money per hour update
      operationId: defineCostProjectMoneyPerHour
      tags:
        - cost-project
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineMoneyPerHourDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/sharepoint/defineSharePointLink:
    post:
      summary: Project SharePoint Link update
      operationId: defineSharePointLink
      tags:
        - cost-project-sharepoint
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectSharePointLinkDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/sharepoint/checkSharePointLinkStatus:
    post:
      summary: Check sharePointLink is available by App
      operationId: checkSharePointLinkStatus
      tags:
        - cost-project-sharepoint
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SharePointLinkStatusDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/sharepoint/updateBySharePointLink:
    post:
      summary: ReImport project by sharepoint link
      operationId: updateProjectBySharePointLink
      tags:
        - cost-project-sharepoint
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/applyTemplate:
    post:
      summary: Apply template to the project
      operationId: applyTemplate
      tags:
        - cost-project
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplyCostProjectTemplateDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/create:
    post:
      summary: Create Cost Project Item
      description: Create CostItem element (default behaviour)
      operationId: createCostItem
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: query
          description: itemId
          required: false
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemCreateDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/createAfter:
    post:
      summary: Create element after defined in param with same parent
      operationId: createCostItemAfter
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: query
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemCreateDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/createBefore:
    post:
      summary: Create element before defined in param with same parent
      operationId: createCostItemBefore
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: query
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemCreateDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/createTop:
    post:
      summary: Create element at the end of top level
      description: Create CostItem element at the end of top level
      operationId: createCostItemTop
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemCreateDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/createSubItem:
    post:
      summary: Create element as child of defined in param at the end
      description: Create element as child of defined in param at the end
      operationId: createCostSubItem
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: parentId
          in: query
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemCreateDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/delete:
    post:
      summary: Remove element with sub tree
      description: Remove element and subtree if it they are present
      operationId: deleteCostItems
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemDeleteDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}:
    get:
      summary: Get cost Project Item by Id
      operationId: findCostItemById
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/update:
    post:
      summary: Update Cost Project Item
      operationId: updateCostItem
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/delete:
    post:
      summary: Delete Cost Item
      operationId: deleteCostItem
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/measure/{measureId}:
    get:
      summary: Get cost Project Item by Id
      operationId: findMeasureById
      tags:
        - cost-project-measure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
        - name: measureId
          in: path
          description: measureId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/measure/{measureId}/defineManualValue:
    post:
      summary: Define value for measure
      operationId: defineManualMeasureValue
      tags:
        - cost-project-measure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
        - name: measureId
          in: path
          description: measureId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemManualMeasureValueDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/measure/{measureId}/clearValue:
    post:
      summary: Clean up value for measure
      operationId: clearMeasureValue
      tags:
        - cost-project-measure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
        - name: measureId
          in: path
          description: measureId
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/defineName:
    post:
      summary: Update Cost Project Item name
      operationId: defineCostItemName
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemDefineNameDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/item/{itemId}/defineComment:
    post:
      summary: Update Cost Project Item comment
      operationId: defineCostItemComment
      tags:
        - cost-project-item
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
        - name: itemId
          in: path
          description: itemId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectItemDefineCommentDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/defineDefaultRisk:
    post:
      summary: Update default risk value
      operationId: defineDefaultRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/defineDevRisk:
    post:
      summary: Update dev risk value
      operationId: defineDevRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/defineQaRisk:
    post:
      summary: Update qa risk value
      operationId: defineQaRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/defineBaRisk:
    post:
      summary: Update ba risk value
      operationId: defineBaRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/defineDevOpsRisk:
    post:
      summary: Update devOps risk value
      operationId: defineDevOpsRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/defineTmRisk:
    post:
      summary: Update tm risk value
      operationId: defineTmRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/risk/definePmRisk:
    post:
      summary: Update pm risk value
      operationId: definePmRisk
      tags:
        - cost-project-risk
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CostProjectDefineRiskDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/structure/addAfter:
    post:
      summary: Move items after item defined in body
      operationId: addCostItemAfter
      tags:
        - cost-project-structure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/structure/addBefore:
    post:
      summary: Move items before item defined in body
      operationId: addCostItemBefore
      tags:
        - cost-project-structure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/structure/addSubItem:
    post:
      summary: Move items as sub items defined in body
      operationId: addSubCostItem
      tags:
        - cost-project-structure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MovingRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/structure/goLevelDown:
    post:
      summary: Move item to the level down. Available if below element same level exist
      operationId: goCostItemLevelDown
      tags:
        - cost-project-structure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLevelRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/{projectId}/structure/goLevelUp:
    post:
      summary: Move item to the level down. Available if below element higher level exist
      operationId: goCostItemLevelUp
      tags:
        - cost-project-structure
      parameters:
        - name: projectId
          in: path
          description: projectId
          required: true
          schema:
            type: string
      requestBody:
        required: false
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangeLevelRequestDto'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/import/auto:
    post:
      summary: Auto import
      operationId: autoImport
      tags:
        - cost-project-import
      parameters:
        - name: projectId
          in: query
          description: projectId
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/import/excel/hse-type-project:
    post:
      summary: Import HSE type project
      operationId: excelImportHseTypeProject
      tags:
        - cost-project-import
      parameters:
        - name: projectId
          in: query
          description: projectId
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/import/excel/hse-plan-project:
    post:
      summary: Import HSE plan project
      operationId: excelImportHsePlanProject
      tags:
        - cost-project-import
      parameters:
        - name: projectId
          in: query
          description: projectId
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/import/excel/haulmont-cost-project:
    post:
      summary: Import Haulmont cost projects
      operationId: excelImportHaulmontCostProject
      tags:
        - cost-project-import
      parameters:
        - name: projectId
          in: query
          description: projectId
          schema:
            type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                fileName:
                  type: string
                  format: binary
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CostProjectDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/export/excel/haulmont-cost:
    get:
      summary: Export cost project as Haulmont Cost
      operationId: excelExportHaulmontCostProject
      tags:
        - cost-project-export
      parameters:
        - name: projectId
          in: query
          description: projectId
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
#              application/octet-stream:
#                schema:
#                  type: string
#                  format: binary
            application/vnd.openxmlformats-officedocument.spreadsheetml.sheet:
              schema:
                type: string
                format: binary
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

  /cost-project/template/:
    get:
      summary: Find all CostProject templates
      operationId: findAllCostProjectTemplates
      tags:
        - cost-project-template
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/CostProjectTemplateDto'
        '401':
          description: Unauthorized
        '403':
          description: Forbidden
        '404':
          description: Not Found

components:
  securitySchemes:
    BearerAuth: # arbitrary name for the security scheme
      type: http
      scheme: bearer
      bearerFormat: JWT
    OpenID:
      type: openIdConnect
      openIdConnectUrl: http://localhost:8060/auth/realms/master/.well-known/openid-configuration

  schemas:
    CostProjectDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        risk:
          $ref: '#/definitions/CostProjectRiskDto'
        aggregate:
          $ref: '#/definitions/CostProjectAggregateDto'
        projectItems:
          type: array
          items:
            $ref: '#/definitions/CostProjectItemDto'
        moneyPerHour:
          type: integer
        sharePointLink:
          type: string

    CostProjectShortDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        moneyPerHour:
          type: integer

    CostProjectDefineNameDto:
      type: object
      properties:
        name:
          type: string

    CostProjectDefineMoneyPerHourDto:
      type: object
      properties:
        moneyPerHour:
          type: integer

    CostProjectSharePointLinkDto:
      type: object
      properties:
        sharePointLink:
          type: string

    ApplyCostProjectTemplateDto:
      type: object
      properties:
        templateId:
          type: string
        variant:
          $ref: '#/definitions/ApplyCostProjectTemplateVariantsDto'

    ApplyCostProjectTemplateVariantsDto:
      type: string
      enum:
        - 'APPEND'
        - 'REPLACE'

    CostProjectRiskDto:
      type: object
      properties:
        default:
          type: number
          format: double
        dev:
          type: number
          format: double
        qa:
          type: number
          format: double
        ba:
          type: number
          format: double
        devOps:
          type: number
          format: double
        tm:
          type: number
          format: double
        pm:
          type: number
          format: double

    CostProjectDefineRiskDto:
      type: object
      properties:
        riskValue:
          type: number
          format: double

    CostProjectAggregateDto:
      type: object
      properties:
        aggregatedHours:
          $ref: '#/definitions/CostProjectItemDto'
        aggregatedMoneyWithoutNds:
          $ref: '#/definitions/CostProjectItemDto'
        aggregatedMoneyWithNds20:
          $ref: '#/definitions/CostProjectItemDto'

    CostProjectItemDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        comment:
          type: string
        parentId:
          type: string
        original:
          $ref: '#/definitions/CostProjectItemDetailsDto'
        multipliedByK:
          $ref: '#/definitions/CostProjectItemDetailsDto'
        multipliedByKWithRound:
          $ref: '#/definitions/CostProjectItemDetailsDto'

    CostProjectItemCreateDto:
      type: object
      properties:
        name:
          type: string

    CostProjectItemDeleteDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string

    CostProjectItemDefineNameDto:
      type: object
      properties:
        name:
          type: string

    CostProjectItemDefineCommentDto:
      type: object
      properties:
        comment:
          type: string

    CostProjectItemDetailsDto:
      type: object
      properties:
        analyseCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        backendCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        frontendCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        devCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        qaCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        devOpsCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        otherCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        tmCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        pmCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'
        sumCost:
          $ref: '#/definitions/CostProjectItemMeasureDto'

    CostProjectItemMeasureDto:
      type: object
      properties:
        id:
          type: string
        value:
          type: number
          format: double
        type:
          $ref: '#/definitions/CostProjectItemDetailMeasureTypeDto'

    CostProjectItemDetailMeasureTypeDto:
      type: string
      enum: [ MANUAL, AUTO ]

    CostProjectItemManualMeasureValueDto:
      type: object
      properties:
        value:
          type: number
          format: double

    MovingRequestDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
        anchor:
          type: string

    ChangeLevelRequestDto:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string

    CostProjectTemplateDto:
      type: object
      properties:
        id:
          type: string
        name:
          type: string

    SharePointLinkStatusDto:
      type: object
      properties:
        availabilityStatus:
          $ref: '#/definitions/SharePointLinkAvailabilityStatusDto'
        needToUpdate:
          type: boolean
        localUpdateTs:
          type: integer
          format: int64
        sharepointUpdateTs:
          type: integer
          format: int64

    SharePointLinkAvailabilityStatusDto:
      type: string
      enum:
        - 'AVAILABLE'
        - 'NOT_AVAILABLE'

security:
  - BearerAuth: []
  - OpenID: []
